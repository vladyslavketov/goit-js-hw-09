{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAG3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SACNH,E,MACAC,IAGFG,EAAQ,C,SACNJ,E,MACAC,GACA,GAEHA,EAAM,G,EAnDA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBAEF,MAAQC,UAAUd,MAAEA,EAAKe,KAAEA,EAAIC,OAAEA,IAAaJ,EAAEK,eAMlD,SAA6BC,EAAOH,EAAMC,GACxC,IAAIG,EAAWD,EAEf,IAAK,IAAIE,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAChCtB,EAAcsB,EAAGD,GACdE,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,QAAQC,IAAI,uBAAqBxB,QAAiBC,OAClDJ,EAAA4B,OAAOC,KAAK,uBAAqB1B,QAAiBC,MAAU,IAE7D0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBsB,QAAQC,IAAI,sBAAoBxB,QAAiBC,OACjDJ,EAAA4B,OAAOC,KAAK,sBAAoB1B,QAAiBC,MAAU,IAG/DmB,GAAYJ,C,CAjBdY,CAAmBC,OAAO5B,EAAM6B,OAAQD,OAAOb,EAAKc,OAAQD,OAAOZ,EAAOa,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const { elements: { delay, step, amount } } = e.currentTarget;\n  // console.log(delay.value, step.value, amount.value);\n\n  runFnCreatePromise(Number(delay.value), Number(step.value), Number(amount.value));\n};\n\nfunction runFnCreatePromise( delay, step, amount ) {\n  let newDelay = delay;\n    \n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, newDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.info(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.info(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    newDelay += step;\n  };\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    // console.log(\"position:\", position, \"delay:\", delay)\n    \n    const shouldResolve = Math.random() > 0.3;\n   \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject ({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n};\n\n// ============ альтернативний варіант ============\n\n// function runFnCreatePromise( delay, step, amount ) {\n//   let newDelay = delay;\n    \n//   for (let i = 1; i <= amount; i += 1) {\n//     createPromise(i, newDelay).then(resolve => console.log(resolve)).catch(reject => console.log(reject));\n//     newDelay += step;\n//   };\n// };\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     // console.log(\"position:\", position, \"delay:\", delay)\n    \n//     const shouldResolve = Math.random() > 0.3;\n   \n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve (`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       } else {\n//         reject (`❌ Rejected promise ${position} in ${delay}ms`);\n//       }\n//     }, delay);\n//   });\n// };"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","elements","step","amount","currentTarget","delay1","newDelay","i","then","console","log","Notify","info","catch","$47d4ff9957288465$var$runFnCreatePromise","Number","value"],"version":3,"file":"03-promises.5d912ece.js.map"}