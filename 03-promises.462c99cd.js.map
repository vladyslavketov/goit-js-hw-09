{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAG3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CACNH,WACAC,UAGFG,EAAQ,CACNJ,WACAC,S,GAGHA,E,KAnDM,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBAEF,IAA6DC,EAAfF,EAAEG,cAAxCC,SAAYhB,EAAKc,EAALd,MAAOiB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,QAMnC,SAA6BlB,EAAOiB,EAAMC,GAGxC,IAFA,IAAIC,EAAWnB,EAENoB,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCtB,EAAcsB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUwB,EAAKD,EAALtB,MACjBwB,QAAQC,IAAI,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAANH,EAAM,OAC1D3B,EAAA+B,OAAOC,KAAK,uBAAwCF,OAAf3B,EAAS,QAAY2B,OAANH,EAAM,M,IAE3DM,OAAM,SAAAP,G,IAAGvB,EAAQuB,EAARvB,SAAUwB,EAAKD,EAALtB,MAClBwB,QAAQC,IAAI,sBAAuCC,OAAf3B,EAAS,QAAY2B,OAANH,EAAM,OACzD3B,EAAA+B,OAAOC,KAAK,sBAAuCF,OAAf3B,EAAS,QAAY2B,OAANH,EAAM,M,IAG7DJ,GAAYF,C,CAjBda,CAAmBC,OAAO/B,EAAMgC,OAAQD,OAAOd,EAAKe,OAAQD,OAAOb,EAAOc,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const { elements: { delay, step, amount } } = e.currentTarget;\n  // console.log(delay.value, step.value, amount.value);\n\n  runFnCreatePromise(Number(delay.value), Number(step.value), Number(amount.value));\n};\n\nfunction runFnCreatePromise( delay, step, amount ) {\n  let newDelay = delay;\n    \n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, newDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.info(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.info(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    newDelay += step;\n  };\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    // console.log(\"position:\", position, \"delay:\", delay)\n    \n    const shouldResolve = Math.random() > 0.3;\n   \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject ({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n};\n\n// ============ альтернативний варіант ============\n\n// function runFnCreatePromise( delay, step, amount ) {\n//   let newDelay = delay;\n    \n//   for (let i = 1; i <= amount; i += 1) {\n//     createPromise(i, newDelay).then(resolve => console.log(resolve)).catch(reject => console.log(reject));\n//     newDelay += step;\n//   };\n// };\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     // console.log(\"position:\", position, \"delay:\", delay)\n    \n//     const shouldResolve = Math.random() > 0.3;\n   \n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve (`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       } else {\n//         reject (`❌ Rejected promise ${position} in ${delay}ms`);\n//       }\n//     }, delay);\n//   });\n// };"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","newDelay","i","then","param","_$delay","console","log","concat","Notify","info","catch","$ce04d3a99e08e73b$var$runFnCreatePromise","Number","value"],"version":3,"file":"03-promises.462c99cd.js.map"}